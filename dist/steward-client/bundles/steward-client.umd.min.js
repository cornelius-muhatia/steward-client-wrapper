!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/common/http"),require("rxjs"),require("rxjs/operators"),require("@angular/common"),require("@angular/forms"),require("@angular/cdk/collections"),require("@angular/material/core"),require("@angular/material")):"function"==typeof define&&define.amd?define("steward-client",["exports","@angular/core","@angular/common/http","rxjs","rxjs/operators","@angular/common","@angular/forms","@angular/cdk/collections","@angular/material/core","@angular/material"],e):e((t=t||self)["steward-client"]={},t.ng.core,t.ng.common.http,t.rxjs,t.rxjs.operators,t.ng.common,t.ng.forms,t.ng.cdk.collections,t.ng.material.core,t.ng.material)}(this,(function(t,e,n,r,o,a,i,s,l,c){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */var m=function(t,e){return(m=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)};var p=function(){};var u=function(){};var h=function(){function t(t,e){this.http=t,this.config=e,this.base_url="/",this.base_url=e.base_url,e.headers?this.headers=e.headers.append("Content-Type","application/json; charset=utf-8"):this.headers=new n.HttpHeaders({"Content-Type":"application/json; charset=utf-8"}),e.access_token&&(this.headers=this.headers.append("Authorization","Bearer "+e.access_token))}return t.prototype.setToken=function(t){this.config.access_token?this.headers.set("Authorization","Bearer "+t):this.headers=this.headers.append("Authorization","Bearer "+t)},t.prototype.post=function(t,e,n){return this.http.post(this.serviceURL(t),JSON.stringify(e),{headers:n?this.appendHeaders(n):this.headers}).pipe(o.catchError(this.handleError()))},t.prototype.put=function(t,e,n){return this.http.put(this.serviceURL(t),JSON.stringify(e),{headers:n?this.appendHeaders(n):this.headers}).pipe(o.catchError(this.handleError()))},t.prototype.delete=function(t,e,n){return this.http.request("delete",this.serviceURL(t),{headers:n?this.appendHeaders(n):this.headers,body:JSON.stringify(e)}).pipe(o.catchError(this.handleError()))},t.prototype.get=function(t,e,n){var r={headers:n?this.appendHeaders(n):this.headers,params:this.getHttpParams(e)};return this.http.get(this.serviceURL(t),r).pipe(o.catchError(this.handleError()))},t.prototype.getFile=function(t,e){var n={params:this.getHttpParams(e)};return this.http.get(this.serviceURL(t)+"?access_token="+this.token,n).pipe(o.catchError(this.handleError()))},t.prototype.postFormData=function(t,e,r){var a=new FormData;return Object.keys(e).forEach((function(t){a.append(t,e[t])})),this.headers.get("Authorization")&&!r?r=new n.HttpHeaders({Authorization:"Bearer "+this.token}):r||(r=new n.HttpHeaders),this.http.post(this.serviceURL(t),a,{headers:r}).pipe(o.catchError(this.handleError()))},t.prototype.postFormDataMultipart=function(t,e){var r=new FormData;return Object.keys(e).forEach((function(t){Array.isArray(e[t])?e[t].forEach((function(e){r.append(t,e)})):r.append(t,e[t])})),this.http.post(this.serviceURL(t),r,{headers:new n.HttpHeaders({Authorization:"Bearer "+this.token})}).pipe(o.catchError(this.handleError()))},t.prototype.putFormDataMultiPart=function(t,e){var r=new FormData;return Object.keys(e).forEach((function(t){Array.isArray(e[t])?e[t].forEach((function(e){r.append(t,e)})):r.append(t,e[t])})),this.http.put(this.serviceURL(t),r,{headers:new n.HttpHeaders({Authorization:"Bearer "+this.token})}).pipe(o.catchError(this.handleError()))},t.prototype.getHttpParams=function(t){if(null==t)return new n.HttpParams;var e=new n.HttpParams;return t.forEach((function(t,n){e=e.append(n,t)})),e},t.prototype.handleError=function(){return function(t){var e=new p;return 500==t.status?(e.status=t.status,e.message="Sorry internal server error occured please try again later"):(e.status=t.status,e.message=t.error.message,e.data=t.error.data),r.of(e)}},t.renderMore=function(t){return"<div class='actions-buttons center' id='"+t+"'><i class='fa fa-check' title='Approve'></i> <i class='fa fa-ban' title='Decline'></i></div>"},t.prototype.intiateDataTable=function(t,e){var n={headers:this.headers,params:this.getHttpParams(e)};return this.http.get(this.serviceURL(t),n).pipe(o.catchError(this.handleError()))},t.prototype.isURL=function(t){try{return new URL(t),!0}catch(t){return!1}},t.prototype.serviceURL=function(t){return this.isURL(t)?t:this.base_url+t},t.prototype.getObjectValue=function(t,e){var n=this;if(!(t instanceof Object)||1===e.length)return t[e[e.length-1]];var r=null;return Object.keys(t).forEach((function(o){o===e[0]&&t[o]instanceof Object?r=n.getObjectValue(t[o],e):o===e[e.length-1]&&(r=t[o])})),r},t.prototype.appendHeaders=function(t){var e=this.headers;return t.forEach((function(t,n){e=e.append(n,t)})),e},t.decorators=[{type:e.Injectable}],t.ctorParameters=function(){return[{type:n.HttpClient},{type:u}]},t}();var d=function(){function t(){}return t.prototype.ngOnInit=function(){},t.decorators=[{type:e.Component,args:[{selector:"lib-steward-client",template:"\n    <p>\n      steward-client works!\n    </p>\n  "}]}],t.ctorParameters=function(){return[]},t}(),f=function(){this.size=20,this.totalElements=0,this.totalPages=0,this.first=!0,this.last=!1,this.content=[],this.sorted=new g,this.number=0};var g=function(){this.sorted=!1,this.unsorted=!0};var y=function(t,e,n,r,o,a){void 0===r&&(r="fa fa-file-text-o"),void 0===o&&(o=!1),void 0===a&&(a=null),this.placeholder="",this.label=t,this.name=e,this.controlType=n,this.icon=r,this.isRequired=o,this.placeholder=a||t};var v=function(t){void 0===t&&(t="text"),this.type=t,this.minLength=this.min=0,this.maxLength=4e3,this.max=1e9};var b=function(t,e){void 0===t&&(t=5),void 0===e&&(e=1),this.cols=t,this.rows=e,this.maxLength=4e3,this.minLength=0};var x=function(t){this.options=t};var w=function(t,e){void 0===e&&(e=null),this.value=t,this.text=e||t};var C=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return function(t,e){function n(){this.constructor=t}m(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}(e,t),e.prototype.format=function(t,e){if("input"===e){var n=t.getDate(),r=t.getMonth()+1;return t.getFullYear()+"-"+(r<10?"0"+r:""+r)+"-"+(n<10?"0"+n:""+n)}return t.toDateString()},e}(c.NativeDateAdapter),F={parse:{dateInput:{month:"numeric",year:"numeric",day:"numeric"}},display:{dateInput:"input",monthYearLabel:{year:"numeric",month:"numeric"},dateA11yLabel:{year:"numeric",month:"numeric",day:"numeric"},monthYearA11yLabel:{year:"numeric",month:"long"}}},k=function(){function t(t){this.sterwardService=t,this.displayedColumns=[],this.selection=new s.SelectionModel(!0,[]),this.rowSelection=new e.EventEmitter,this.columns=[],this.enableCheckbox=!0,this.actionsEvent=new e.EventEmitter,this.filterComponents=[],this.showDefaultFilters=!0,this.showNumberColumn=!1,this.selected=[],this.filter={},this.isLoadingResults=!1,this.page=new f,this.page.content=[],this.datePipe=new a.DatePipe("en-US")}return t.prototype.ngOnInit=function(){var t=this;this.enableCheckbox&&this.displayedColumns.push("checkbox"),this.showNumberColumn&&this.displayedColumns.push("no"),this.columns.forEach((function(e){t.displayedColumns.push(e.fieldName)})),this.moreActions?this.displayedColumns.push("actions"):console.debug("moreActions not injected skipping rendering 'More Actions' column");var e={};this.filterComponents.forEach((function(t){var n=[];t.isRequired&&n.push(i.Validators.required),(t.controlType instanceof v||t.controlType instanceof b)&&(n.push(i.Validators.minLength(t.controlType.minLength)),n.push(i.Validators.maxLength(t.controlType.maxLength))),t.controlType instanceof v&&(n.push(i.Validators.max(t.controlType.max)),n.push(i.Validators.min(t.controlType.min))),e[t.name]=new i.FormControl("",n)})),e.from=new i.FormControl("",i.Validators.maxLength(100)),e.to=new i.FormControl("",i.Validators.maxLength(100)),e.needle=new i.FormControl("",i.Validators.maxLength(200)),this.filterForm=new i.FormGroup(e),this.loadPage({offset:0,limit:this.page.size},null)},t.prototype.ngAfterViewInit=function(){this.rowSelection.emit(this.selection)},t.prototype.isAllSelected=function(){return this.selection.selected.length==this.page.content.length},t.prototype.masterToggle=function(){var t=this;this.isAllSelected()?this.selection.clear():this.page.content.forEach((function(e){return t.selection.select(e)}))},t.prototype.onActionClick=function(t){this.actionsEvent.emit(t)},t.prototype.loadPage=function(t,e){var n,r=this;this.endpoint&&(this.isLoadingResults=!0,n=e||new Map,this.params&&this.params.forEach((function(t,e){null!=e&&null!=e&&n.set(e,t)})),n.set("page",t.offset),n.set("size",t.limit),this.sterwardService.get(this.endpoint,n,this.headers).subscribe((function(t){if(200==t.status){if(r.showNumberColumn){var e=1+t.data.number*t.data.size;t.data.content.forEach((function(t){t.no=e++}))}r.page=t.data}r.isLoadingResults=!1}),(function(t){console.debug("Server request has failed"),r.isLoadingResults=!1})))},t.prototype.pageEvent=function(t){this.loadPage({limit:t.pageSize,offset:t.pageIndex},this.getFilters())},t.prototype.processSorting=function(t){this.sortParams=t,this.loadPage({limit:this.page.size,offset:0},this.getFilters())},t.prototype.getFilters=function(){var t=this,e=new Map;return Object.keys(this.filterForm.value).forEach((function(n,r){t.filterForm.value[n]&&("from"==n||"to"==n?e.set(n,t.datePipe.transform(t.filterForm.value[n],"yyyy-MM-dd")):e.set(n,t.filterForm.value[n]))})),this.sortParams&&e.set("sort",this.sortParams.active+","+this.sortParams.direction),e},t.prototype.processFilter=function(t){this.loadPage({offset:this.page.number,limit:this.page.size},this.getFilters())},t.prototype.isInput=function(t){return t instanceof v},t.prototype.isSelect=function(t){return t instanceof x},t.prototype.isTextArea=function(t){return t instanceof b},t.prototype.getFormattedDate=function(t){var e=t.getFullYear(),n=(1+t.getMonth()).toString();n=n.length>1?n:"0"+n;var r=t.getDate().toString();return e+"-"+n+"-"+(r=r.length>1?r:"0"+r)},t.prototype.getFieldValue=function(t,e){if(e.callback)return e.callback(t);var n=e.fieldName.split("."),r=this.sterwardService.getObjectValue(t,n);return e.isDateColumn?this.datePipe.transform(r,"medium"):r},t.prototype.refreshTable=function(){console.debug("Refreshed data tables"),this.loadPage({offset:this.page.number,limit:this.page.size},this.getFilters())},t.decorators=[{type:e.Component,args:[{selector:"tgr-material-table",template:'<div class="row"  *ngIf="showDefaultFilters || filterComponents.length > 0">\n  <div class="col-md-12">\n    <div class="card card-outline-default mat-elevation-z4">\n      <div class="card-body">\n        <div class="row">\n          <div class="col-md-12">\n            <div class="mat-table-filter">\n                <button title="Refresh" (click) = "refreshTable()" mat-icon-button color="basic" type="reset"><mat-icon>refresh</mat-icon></button>\n            </div>\n          </div>\n        </div>\n        <form (ngSubmit)="processFilter(filterForm)" [formGroup]="filterForm">\n          <div class="row">\n            <div class="col-md-3  mb-3" *ngFor="let control of filterComponents">\n              \x3c!-- Intialize form select control --\x3e\n              <mat-form-field class="col-md-12" *ngIf="isSelect(control.controlType)">\n                <mat-select [placeholder]="control.placeholder" [formControlName]="control.name">\n                  <mat-option *ngFor="let o of control.controlType.options" [value]="o.value">\n                    {{o.text}}\n                  </mat-option>\n                </mat-select>\n                <mat-error *ngIf="filterForm.get(control.name).hasError(\'required\')">{{control.placeholder}}\n                  is required</mat-error>\n              </mat-form-field>\n\n              \x3c!-- Intialize form textarea control --\x3e\n              <mat-form-field class="col-md-12" *ngIf="isTextArea(control.controlType)">\n                <textarea matInput [formControlName]="control.name" [placeholder]="control.label" [cols]="control.controlType.cols"\n                  [rows]="control.controlType.rows"></textarea>\n                <mat-error *ngIf="filterForm.get(control.name).hasError(\'required\')">{{control.placeholder}}\n                  is required</mat-error>\n                <mat-error *ngIf="filterForm.get(control.name).hasError(\'minlength\')">Minimum of\n                  {{control.controlType.minLength}} characters</mat-error>\n                <mat-error *ngIf="filterForm.get(control.name).hasError(\'maxlength\')">Maximum of\n                  {{control.controlType.maxLength}} characters</mat-error>\n              </mat-form-field>\n\n              \x3c!-- Intialize form input control --\x3e\n              <mat-form-field class="col-md-12" *ngIf="isInput(control.controlType)">\n                \x3c!-- <mat-icon matPrefix class="material-icons icon-margin-right">perm_identity</mat-icon> --\x3e\n                <input matInput [placeholder]="control.label" [type]="control.controlType.type" [formControlName]="control.name" />\n                <mat-error *ngIf="filterForm.get(control.name).hasError(\'required\')">{{control.placeholder}}\n                  is required</mat-error>\n                <mat-error *ngIf="filterForm.get(control.name).hasError(\'minlength\')">Minimum of\n                  {{control.controlType.minLength}} characters</mat-error>\n                <mat-error *ngIf="filterForm.get(control.name).hasError(\'maxlength\')">Maximum of\n                  {{control.controlType.maxLength}} characters</mat-error>\n                <mat-error *ngIf="filterForm.get(control.name).hasError(\'min\')">Should be greater than\n                  {{control.controlType.min}}</mat-error>\n                <mat-error *ngIf="filterForm.get(control.name).hasError(\'max\')">Should be less than\n                  {{control.controlType.max}}</mat-error>\n              </mat-form-field>\n            </div>\n            <div class="col-md-3 mb-3" *ngIf="showDefaultFilters">\n              \x3c!-- <mat-icon matPrefix class="material-icons col-md-3">date_range</mat-icon> --\x3e\n              <mat-form-field class="col-md-12">\n                <input matInput placeholder="From" type="date" [matDatepicker]="picker" formControlName="from" />\n                <mat-datepicker-toggle matSuffix [for]="picker"></mat-datepicker-toggle>\n                <mat-datepicker #picker></mat-datepicker>\n              </mat-form-field>\n            </div>\n            <div class="col-md-3 mb-3" *ngIf="showDefaultFilters">\n              <mat-form-field class="col-md-12">\n                \x3c!-- <mat-icon>home</mat-icon> --\x3e\n                <input matInput placeholder="To" type="date" [matDatepicker]="toPicker" formControlName="to" />\n                <mat-datepicker-toggle matSuffix [for]="toPicker"></mat-datepicker-toggle>\n                <mat-datepicker #toPicker></mat-datepicker>\n              </mat-form-field>\n            </div>\n            <div class="col-md-3 mb-3" *ngIf="showDefaultFilters">\n              <mat-form-field class="col-md-12">\n                <input matInput maxlength="100" placeholder="Search" type="text" formControlName="needle" />\n              </mat-form-field>\n            </div>\n            <span class="help-block" *ngIf="filterForm.get(\'from\').touched">\n              <span class="text-danger" *ngIf="filterForm.get(\'from\').hasError(\'maxlength\')">Maximum of 200 characters</span>\n            </span>\n          </div>\n          <div class="row">\n            <div class="col-md-12">\n              <div class="pull-right mat-table-filter">\n                <button mat-raised-button color="primary" type="submit" [disabled]="filterForm.invalid">Filter</button>\n                <button mat-raised-button color="basic" type="reset">Reset</button>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n<div class="row">\n  <div class="col-md-12">\n      <div class="mat-table-loading-shade" *ngIf="isLoadingResults">\n        <mat-spinner *ngIf="isLoadingResults"></mat-spinner>\n      </div>\n    <table mat-table [dataSource]="page.content" class="mat-elevation-z8" style="width: 100%" matSort (matSortChange)="processSorting($event)">\n\n      \x3c!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition" --\x3e\n\n      \x3c!-- Position Column --\x3e\n      <ng-container matColumnDef="checkbox" *ngIf="enableCheckbox">\n        <th mat-header-cell *matHeaderCellDef>\n          <mat-checkbox (change)="$event ? masterToggle() : null" [checked]="selection.hasValue() && isAllSelected()"\n            [indeterminate]="selection.hasValue() && !isAllSelected()">\n          </mat-checkbox>\n        </th>\n        \x3c!-- <td mat-cell *matCellDef="let element"> <mat-checkbox></mat-checkbox> </td> --\x3e\n        <td mat-cell *matCellDef="let row">\n          <mat-checkbox (click)="$event.stopPropagation()" (change)="$event ? selection.toggle(row) : null" [checked]="selection.isSelected(row)">\n          </mat-checkbox>\n        </td>\n      </ng-container>\n\n      \x3c!-- Number Column --\x3e\n      <ng-container matColumnDef="no" *ngIf="showNumberColumn">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\n        <td mat-cell *matCellDef="let element" > \n           <div>{{element[\'no\']}}</div>\n          </td>\n      </ng-container>\n\n      \x3c!-- Fields Columns --\x3e\n      <ng-container [matColumnDef]="c.fieldName" *ngFor="let c of columns">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header [class.hide_on_xs]="c.hideOnXs"> {{c.columnName}} </th>\n        <td mat-cell *matCellDef="let element" [class.hide_on_xs]="c.hideOnXs"> \n          \x3c!-- {{c.isDateColumn ?\n          (getFieldValue(element, c) | date:\'medium\') :\n          getFieldValue(element, c)}} --\x3e\n           <div [innerHtml] = "getFieldValue(element, c)"></div></td>\n      </ng-container>\n\n      \x3c!-- Other Column --\x3e\n      <ng-container matColumnDef="actions" *ngIf="moreActions">\n        <th mat-header-cell *matHeaderCellDef> {{moreActions.name}} </th>\n        <td mat-cell *matCellDef="let element">\n          <button mat-icon-button [matMenuTriggerFor]="menu">\n            <mat-icon>list</mat-icon>\n          </button>\n          <mat-menu #menu="matMenu">\n            <button mat-menu-item *ngFor="let action of moreActions.actions" (click)="onActionClick({id: element[moreActions.idFieldName], actionName: action.actionName})">{{action.actionName}}</button>\n          </mat-menu>\n        </td>\n      </ng-container>\n      <tr mat-header-row *matHeaderRowDef="displayedColumns"></tr>\n      <tr mat-row *matRowDef="let row; columns: displayedColumns;"></tr>\n    </table>\n    <mat-paginator (page)="pageEvent($event)" showFirstLastButtons [length]="page.totalElements" [pageSize]="20" [pageSizeOptions]="[1, 5, 10, 20, 50, 100, 200]">\n    </mat-paginator>\n  </div>\n</div>',providers:[{provide:l.DateAdapter,useClass:C},{provide:l.MAT_DATE_FORMATS,useValue:F}],styles:[".mat-table-filter button{margin-right:8px;float:right}@media (max-width:576px){.hide_on_xs{display:none}}.mat-table-loading-shade{position:absolute;top:0;left:0;bottom:56px;right:0;background:rgba(0,0,0,.15);z-index:1;display:flex;align-items:center;justify-content:center}.mat-cell{padding-right:8px}"]}]}],t.ctorParameters=function(){return[{type:h}]},t.propDecorators={selection:[{type:e.Output}],rowSelection:[{type:e.Output}],sort:[{type:e.ViewChild,args:[c.MatSort,{static:!0}]}],columns:[{type:e.Input}],enableCheckbox:[{type:e.Input}],endpoint:[{type:e.Input}],moreActions:[{type:e.Input}],actionsEvent:[{type:e.Output}],filterComponents:[{type:e.Input}],params:[{type:e.Input}],showDefaultFilters:[{type:e.Input}],showNumberColumn:[{type:e.Input}],headers:[{type:e.Input}]},t}();var M=function(t,e,n){this.name="Actions",this.idFieldName="id",this.actions=t,this.name=n,this.idFieldName=e};var E=function(){function t(){}return t.forRoot=function(e){return{ngModule:t,providers:[{provide:u,useValue:e}]}},t.decorators=[{type:e.NgModule,args:[{imports:[i.FormsModule,i.ReactiveFormsModule,a.CommonModule,n.HttpClientModule,c.MatInputModule,c.MatTableModule,c.MatCheckboxModule,c.MatIconModule,c.MatDatepickerModule,c.MatNativeDateModule,c.MatPaginatorModule,c.MatSelectModule,c.MatButtonModule,c.MatSortModule,c.MatMenuModule,c.MatProgressSpinnerModule,c.MatAutocompleteModule],declarations:[d,k],exports:[d,k]}]}],t}();t.APP_DATE_FORMATS=F,t.AppDateAdapter=C,t.Page=f,t.ResponseWrapper=p,t.Sort=g,t.StewardClientComponent=d,t.StewardClientModule=E,t.StewardClientService=h,t.StewardConfig=u,t.TgrDynamicControl=y,t.TgrInput=v,t.TgrMaterialTableComponent=k,t.TgrMoreActions=M,t.TgrSelect=x,t.TgrSelectOption=w,t.TgrTextarea=b,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=steward-client.umd.min.js.map