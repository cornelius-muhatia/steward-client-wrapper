{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://steward-client/lib/entities/wrappers/response-wrapper.ts","ng://steward-client/lib/steward-client.service.ts","ng://steward-client/lib/steward-client.component.ts","ng://steward-client/lib/entities/wrappers/page.ts","ng://steward-client/lib/entities/tgr-dynamic-control.ts","ng://steward-client/lib/tgr-material-table/tgr-material-table.component.ts","ng://steward-client/lib/steward-client.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__generator","thisArg","body","f","y","t","g","_","label","sent","trys","ops","next","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","call","done","value","pop","length","push","e","step","StewardClientService","http","config","clientDetails","base_url","headers","append","HttpHeaders","Content-Type","access_token","prototype","setToken","token","set","post","endpoint","data","addHeaders","oauthContext","serviceURL","JSON","stringify","appendHeaders","pipe","catchError","handleError","put","delete","request","get","options","params","getHttpParams","getFile","postFormData","formData","FormData","keys","forEach","key","Authorization","postFormDataMultipart","isArray","k2","putFormDataMultiPart","undefined","HttpParams","httpParams","error","res","ResponseWrapper","status","message","of","renderMore","id","intiateDataTable","isURL","url","URL","getObjectValue","_this","entries","customHeaders","val","authenticate","username","password","console","warn","formHeaders","getHttpBasicToken","tap","response","setSessionCookie","refreshToken","expiry","cookie","document","_arguments","generator","updateAccessToken","refreshAccessToken","subscribe","_a","P","Promise","resolve","reject","fulfilled","rejected","result","then","apply","debug","inst","split","item","includes","oauthTokenEndpoint","refresh_token","grant_type","btoa","clientId","clientSecret","Injectable","HttpClient","StewardConfig","ClientDetails","decorators","type","Optional","StewardClientComponent","ngOnInit","Component","args","selector","template","size","totalElements","totalPages","first","last","content","sorted","Sort","number","unsorted","name","controlType","icon","isRequired","placeholder","minLength","min","maxLength","max","cols","rows","TgrSelectOption","text","AppDateAdapter","__","constructor","create","tslib_1.__extends","format","date","displayFormat","day","getDate","month","getMonth","getFullYear","toDateString","NativeDateAdapter","APP_DATE_FORMATS","parse","dateInput","year","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel","TgrMaterialTableComponent","sterwardService","displayedColumns","selection","SelectionModel","rowSelection","EventEmitter","columns","enableCheckbox","actionsEvent","filterComponents","showDefaultFilters","showNumberColumn","selected","filter","isLoadingResults","page","Page","datePipe","DatePipe","c","fieldName","moreActions","group","comp","validators","Validators","required","TgrInput","TgrTextarea","FormControl","filterForm","FormGroup","loadPage","offset","limit","ngAfterViewInit","emit","isAllSelected","masterToggle","clear","row","select","onActionClick","event","pageInfo","filters","Map","no_1","no","pageEvent","pageSize","pageIndex","getFilters","processSorting","sortParams","transform","active","direction","processFilter","isInput","control","isSelect","TgrSelect","isTextArea","getFormattedDate","toString","getFieldValue","column","callback","k","isDateColumn","refreshTable","providers","provide","DateAdapter","useClass","MAT_DATE_FORMATS","useValue","Output","ViewChild","MatSort","static","Input","actions","idFieldName","StewardClientModule","forRoot","ngModule","NgModule","imports","FormsModule","ReactiveFormsModule","CommonModule","HttpClientModule","MatInputModule","MatTableModule","MatCheckboxModule","MatIconModule","MatDatepickerModule","MatNativeDateModule","MatPaginatorModule","MatSelectModule","MatButtonModule","MatSortModule","MatMenuModule","MatProgressSpinnerModule","MatAutocompleteModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * Wraps server response\n */\nexport class ResponseWrapper<T> {\n    /**\n     * Http status code e.g. 200\n     */\n    status: number;\n    /**\n     * Server message\n     */\n    message: string;\n    /**\n     * Actual response data\n     */\n    data: T;\n}\n","import { Injectable, Optional } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpParams } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { ResponseWrapper } from './entities/wrappers/response-wrapper';\r\n\r\nexport class StewardConfig {\r\n    base_url: string;\r\n    access_token?: string;\r\n    headers?: HttpHeaders;\r\n}\r\n\r\n/**\r\n * Oauth2 client details\r\n */\r\nexport class ClientDetails {\r\n    clientSecret: string;\r\n    clientId: String;\r\n}\r\n\r\n@Injectable()\r\nexport class StewardClientService<T, E> {\r\n    /**\r\n     * Http request headers\r\n     */\r\n    private headers: HttpHeaders;\r\n    /**\r\n     * Authorization token\r\n     */\r\n    private token: string;\r\n    /**\r\n     * Oauth refresh token\r\n     */\r\n    private refreshToken: String;\r\n    /**\r\n     * Base url\r\n     */\r\n    base_url: string = \"/\";\r\n    /**\r\n     * Token expiry token\r\n     */\r\n    private expiryDate: Date;\r\n    /**\r\n     * Oauth token endpoint\r\n     */\r\n    private oauthTokenEndpoint: string;\r\n\r\n    /**\r\n     * Constructor\r\n     * \r\n     * @param http http client service\r\n     * @param config base url, access token and request headers\r\n     * @param clientDetails Oauth2 client details\r\n     */\r\n    constructor(private http: HttpClient, private config: StewardConfig, @Optional() private clientDetails?: ClientDetails) {\r\n        this.base_url = config.base_url;\r\n        if (config.headers) {\r\n            this.headers = config.headers.append('Content-Type', 'application/json; charset=utf-8');\r\n        } else {\r\n            this.headers = new HttpHeaders({\r\n                'Content-Type': 'application/json; charset=utf-8'\r\n            });\r\n        }\r\n        if (config.access_token) {//append access token if the environment has access token\r\n            this.headers = this.headers.append('Authorization', \"Bearer \" + config.access_token);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *  Used to update authorization token. Currently supports bearer token\r\n     *\r\n     * @param token\r\n     */\r\n    setToken(token: string) {\r\n        if (this.config.access_token) {//update token header\r\n            this.headers = this.headers.set(\"Authorization\", \"Bearer \" + token);\r\n        } else {//append access token if the environment has access token\r\n            this.headers = this.headers.append('Authorization', \"Bearer \" + token);\r\n        }\r\n    }\r\n    /**\r\n     * Used to handle http post requests\r\n     * @param endpoint expects either an endpoint or url\r\n     * @param data a valid object\r\n     * @param addHeaders additional headers to be appended to existing headers\r\n     */\r\n    post(endpoint: string, data: T, addHeaders?: Map<string, string | string[]>): Observable<ResponseWrapper<E>> {\r\n        this.oauthContext()\r\n        return this.http.post(this.serviceURL(endpoint), JSON.stringify(data), { headers: addHeaders ? this.appendHeaders(addHeaders) : this.headers }).pipe(\r\n            catchError(this.handleError<any>())\r\n        );\r\n\r\n    }\r\n\r\n    /**\r\n     * Used to handle http post requests\r\n     * @param endpoint expects either an endpoint or url\r\n     * @param addHeaders additional headers to be appended to existing headers\r\n     */\r\n    put(endpoint: string, data: T, addHeaders?: Map<string, string | string[]>): Observable<ResponseWrapper<E>> {\r\n        this.oauthContext();\r\n        return this.http.put(this.serviceURL(endpoint), JSON.stringify(data), { headers: addHeaders ? this.appendHeaders(addHeaders) : this.headers }).pipe(\r\n            catchError(this.handleError<any>())\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Handles http delete request\r\n     * @param endpoint expects either an endpoint or url\r\n     * @param data\r\n     * @param addHeaders additional headers to be appended to existing headers\r\n     */\r\n    delete(endpoint: string, data: T, addHeaders?: Map<string, string | string[]>): Observable<ResponseWrapper<E>> {\r\n        this.oauthContext();\r\n        return this.http.request('delete', this.serviceURL(endpoint), { headers: addHeaders ? this.appendHeaders(addHeaders) : this.headers, body: JSON.stringify(data) }).pipe(\r\n            catchError(this.handleError<any>())\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Handles http get request\r\n     * @param endpoint expects either an endpoint or url\r\n     * @param data request params\r\n     * @param addHeaders additional headers to be appended to existing headers\r\n     */\r\n    get(endpoint: string, data?: Map<string, string>, addHeaders?: Map<string, string | string[]>): Observable<ResponseWrapper<E>> {\r\n        this.oauthContext();\r\n        const options = {\r\n            headers: addHeaders ? this.appendHeaders(addHeaders) : this.headers,\r\n            params: this.getHttpParams(data)\r\n        };\r\n        return this.http.get(this.serviceURL(endpoint), options).pipe(\r\n            catchError(this.handleError<any>())\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Fetch a file\r\n     * @param endpoint expects either an endpoint or url\r\n     * @param data\r\n     */\r\n    getFile(endpoint: string, data?: Map<string, string>): Observable<ResponseWrapper<E>> {\r\n        this.oauthContext();\r\n        const options = {\r\n            params: this.getHttpParams(data)\r\n        };\r\n        return this.http.get(this.serviceURL(endpoint) + '?access_token=' + this.token, options).pipe(\r\n            catchError(this.handleError<any>())\r\n        );\r\n    }\r\n    /**\r\n     * if\r\n     * @param endpoint expects either an endpoint or url\r\n     * @param data\r\n     * @param headers\r\n     */\r\n    postFormData(endpoint: string, data: T, headers?: HttpHeaders): Observable<ResponseWrapper<E>> {\r\n        this.oauthContext();\r\n        const formData: FormData = new FormData();\r\n        Object.keys(data).forEach((key) => {\r\n            formData.append(key, data[key]);\r\n        });\r\n        if (this.headers.get(\"Authorization\") && (!headers)) {\r\n            headers = new HttpHeaders({ 'Authorization': 'Bearer ' + this.token });\r\n        } else if (!headers) {\r\n            headers = new HttpHeaders();\r\n        }\r\n        return this.http.post(this.serviceURL(endpoint), formData, { headers: headers }).pipe(\r\n            catchError(this.handleError<any>())\r\n        );\r\n    }\r\n\r\n    /**\r\n     * handle http form data request\r\n     * @param endpoint expects either an endpoint or url\r\n     * @param data expects a valid object\r\n     */\r\n    postFormDataMultipart(endpoint: string, data: T): Observable<ResponseWrapper<E>> {\r\n        this.oauthContext();\r\n        const formData: FormData = new FormData();\r\n        Object.keys(data).forEach((key) => {\r\n            if (Array.isArray(data[key])) {\r\n                data[key].forEach(k2 => {\r\n                    formData.append(key, k2);\r\n                });\r\n            } else {\r\n                formData.append(key, data[key]);\r\n            }\r\n        });\r\n        return this.http.post(this.serviceURL(endpoint), formData, { headers: new HttpHeaders({ 'Authorization': 'Bearer ' + this.token }) }).pipe(\r\n            catchError(this.handleError<any>())\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Handles http put form data request\r\n     * @param endpoint expects either an endpoint or url\r\n     * @param data valid object\r\n     */\r\n    putFormDataMultiPart(endpoint: string, data: T): Observable<ResponseWrapper<E>> {\r\n        this.oauthContext();\r\n        const formData: FormData = new FormData();\r\n        Object.keys(data).forEach((key) => {\r\n            if (Array.isArray(data[key])) {\r\n                data[key].forEach(k2 => {\r\n                    formData.append(key, k2);\r\n                });\r\n            } else {\r\n                formData.append(key, data[key]);\r\n            }\r\n        });\r\n        return this.http.put(this.serviceURL(endpoint), formData, { headers: new HttpHeaders({ 'Authorization': 'Bearer ' + this.token }) }).pipe(\r\n            catchError(this.handleError<any>())\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Convert map to HttpParams\r\n     * @param data\r\n     */\r\n    private getHttpParams(data: Map<string, string>): HttpParams {\r\n        if (data == undefined) {\r\n            return new HttpParams();\r\n        }\r\n        let httpParams: HttpParams = new HttpParams();\r\n        data.forEach((value: string, key: string) => {\r\n            httpParams = httpParams.append(key, value);\r\n        });\r\n        return httpParams;\r\n    }\r\n    /**\r\n     * Used to catch exception thrown by http client returns internal server error\r\n     * if status 500 is encountered\r\n     */\r\n    private handleError<ResponseWrapper>() {\r\n        return (error: HttpErrorResponse): Observable<any> => {\r\n            const res = new ResponseWrapper();\r\n            //            console.error(error); // log to console instead\r\n            if (error.status == 500) {\r\n                res.status = error.status;\r\n                res.message = 'Sorry internal server error occured please try again later';\r\n            } else {\r\n                res.status = error.status;\r\n                res.message = error.error.message;\r\n                res.data = error.error.data;\r\n            }\r\n            return of(res);\r\n        };\r\n    }\r\n    /**\r\n     * Used to render action buttons\r\n     */\r\n    static renderMore(id: any) {\r\n        return '<div class=\\'actions-buttons center\\' id=\\'' + id + '\\'><i class=\\'fa fa-check\\' title=\\'Approve\\'></i> <i class=\\'fa fa-ban\\' title=\\'Decline\\'></i></div>';\r\n    }\r\n\r\n    /**\r\n     * Handles datatable request\r\n     * @param endpoint expects either an endpoint or url\r\n     * @param data expects a valid map\r\n     */\r\n    public intiateDataTable(endpoint: string, data?: Map<string, string>) {\r\n        this.oauthContext();\r\n        const options = {\r\n            headers: this.headers,\r\n            params: this.getHttpParams(data)\r\n        };\r\n        return this.http.get(this.serviceURL(endpoint), options).pipe(\r\n            catchError(this.handleError<any>())\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Used to validate if a string is a valid URL\r\n     * @param url\r\n     */\r\n    public isURL(url: string): boolean {\r\n        try {\r\n            new URL(url);\r\n            return true;\r\n        } catch (_) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * If the url parameter is an endpoint it appends to the base url\r\n     * @param url\r\n     * @see base_url\r\n     */\r\n    public serviceURL(url: string): string {\r\n        return (this.isURL(url)) ? url : this.base_url + url;\r\n    }\r\n\r\n    /**\r\n   * Used to find key value based on the key sequence provided\r\n   * @param data expects an object\r\n   * @param keys i.e. user.gender.type.type\r\n   */\r\n    public getObjectValue(data: any, keys: Array<string>) {\r\n        if ((!(data instanceof Object)) || (keys.length === 1)) {\r\n            return data[keys[keys.length - 1]];\r\n        }\r\n        let value = null;\r\n        Object.keys(data).forEach((key) => {\r\n            if ((key === keys[0]) && (data[key] instanceof Object)) {\r\n                value = this.getObjectValue(data[key], keys);\r\n            } else if (key === keys[keys.length - 1]) {\r\n                value = data[key];\r\n            }\r\n        });\r\n        return value;\r\n\r\n    }\r\n\r\n    /**\r\n     * Used to append headers the current httpHeaders\r\n     * @returns merged headers\r\n     */\r\n    public appendHeaders(entries: Map<String, string | string[]>): HttpHeaders {\r\n        let customHeaders: HttpHeaders = this.headers;\r\n        entries.forEach((val: string | string[], key: string) => {\r\n            customHeaders = customHeaders.append(key, val);\r\n        });\r\n        return customHeaders;\r\n    }\r\n\r\n    /**\r\n     * Handles oauth authentication with password grant\r\n     * \r\n     * @param username user's username\r\n     * @param password user's password\r\n     * @param addHeaders additional headers to be appended to existing headers\r\n     */\r\n    public authenticate(endpoint: string, username: string, password: string, addHeaders?: Map<string, string | string[]>): Observable<ResponseWrapper<E>> {\r\n        if (!this.clientDetails) {\r\n            console.warn(\"oauth 2 authentication not support ensure you have injected client details(client secret and client id)\")\r\n        }\r\n        let formHeaders = addHeaders ? this.appendHeaders(addHeaders) : this.headers\r\n        formHeaders = formHeaders.set('Authorization', 'Basic ' + this.getHttpBasicToken());\r\n        formHeaders = formHeaders.delete(\"Content-Type\");\r\n        const formData: FormData = new FormData();\r\n        formData.append(\"username\", username);\r\n        formData.append(\"password\", password);\r\n        formData.append(\"grant_type\", \"password\");\r\n        return this.http.post(this.serviceURL(endpoint), formData, { headers: formHeaders }).pipe(\r\n            catchError(this.handleError<any>())\r\n        ).pipe(tap(response => {\r\n            if (response[\"access_token\"]) {\r\n                this.setSessionCookie(response[\"access_token\"], response[\"refresh_token\"], response[\"expires_in\"]);\r\n            }\r\n        }));\r\n\r\n    }\r\n\r\n    /**\r\n     * Update authorization token cookie. Also updates Bearer Authorization token\r\n     * \r\n     * @param token oauth token\r\n     * @param refreshToken oauth refresh token\r\n     * @param expiry token expiry in seconds\r\n     */\r\n    private setSessionCookie(token: string, refreshToken: string, expiry: number) {\r\n        let cookie = \";samesite=strict;path=/\";\r\n        document.cookie = \"token=\" + token + cookie + \";max-age=\" + expiry;\r\n        document.cookie = \"refreshToken=\" + refreshToken + cookie + \";max-age=\" + expiry + 300;\r\n        this.headers = this.headers.set(\"Authorization\", \"Bearer \" + token)\r\n    }\r\n\r\n    /**\r\n     * If client details exists, expired token is refreshed.\r\n     * \r\n     */\r\n    private async oauthContext() {\r\n        if (!this.clientDetails) {\r\n            return;\r\n        }\r\n        this.updateAccessToken();\r\n        if ((!this.token) && this.refreshToken) {\r\n            await this.refreshAccessToken().subscribe(response => {\r\n                if (!response[\"access_token\"]) {\r\n                    console.error(\"Failed to refresh access token\", response);\r\n                }\r\n            });\r\n        } else {\r\n            return;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Update access token and refresh token from session cookie\r\n     */\r\n    private updateAccessToken(){\r\n        console.debug(\"Updating session credentials...\")\r\n        let inst = this;\r\n        document.cookie.split(';').forEach(function (item) {\r\n            if(item.includes(\"token=\")){\r\n                inst.token = item.split('=')[1];\r\n                inst.headers = inst.headers.set(\"Authorization\", \"Bearer \" + inst.token)\r\n            } else if(item.includes(\"refreshToken=\")){\r\n                inst.refreshToken = item.split('=')[1];\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Refreshes access token\r\n     * \r\n     * @param fun callback function after token refresh\r\n     */\r\n    public refreshAccessToken(): Observable<ResponseWrapper<E>> {\r\n        let headers: HttpHeaders = new HttpHeaders({\r\n            'Authorization': 'Basic '\r\n                + this.getHttpBasicToken()\r\n        });\r\n        return this.http.post(this.serviceURL(this.oauthTokenEndpoint), {\r\n            refresh_token: this.refreshAccessToken,\r\n            grant_type: \"refresh_token\"\r\n        }, { headers: headers })\r\n            .pipe(catchError(this.handleError<any>()))\r\n            .pipe(\r\n                tap(response => {\r\n                    if (response[\"refresh_token\"]) {\r\n                        this.setSessionCookie(response[\"access_token\"], response[\"refresh_token\"], response[\"expires_in\"])\r\n                    }\r\n                }));\r\n    }\r\n\r\n    /**\r\n     * Get http basic token\r\n     */\r\n    private getHttpBasicToken(): string {\r\n        return btoa(this.clientDetails.clientId + \":\" + this.clientDetails.clientSecret)\r\n    }\r\n}\r\n/**\r\n * Authorization token details\r\n */\r\nexport interface Token {\r\n    accessToken: String;\r\n    refreshToken: String;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-steward-client',\n  template: `\n    <p>\n      steward-client works!\n    </p>\n  `,\n  styles: []\n})\nexport class StewardClientComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","/**\n * Datable page used to wrapper server content response\n */\nexport class Page<T> {\n    /**\n     * Number of items per page same as limit\n     */\n    size: number = 20;\n    /**\n     * Total items available on the server\n     */\n    totalElements: number = 0;\n    /**\n     * Total number of pages present\n     */\n    totalPages: number = 0;\n    /**\n     * Checks if is the first page\n     */\n    first: boolean = true;\n    /**\n     * Checks if it is the last page\n     */\n    last: boolean = false;\n    /**\n     * The actual page content\n     */\n    content: Array<T> = [];\n    /**\n     * Used to map sort parameters\n     */\n    sorted: Sort = new Sort();\n    /**\n     * Current page number\n     */\n    number: number = 0;\n}\n/**\n * used to map sort request\n */\nexport class Sort{\n    sorted: boolean = false;\n    unsorted: boolean = true;\n}\n","/**\n * Represents dynamic html controls (Input, TextArea and Select)\n */\nexport class TgrDynamicControl<T> {\n    /**\n     * Control label\n     */\n    label: string;\n    /**\n     * Icon to be appended before the control (supports class defined icons)\n     */\n    icon: string;\n    /**\n     * Name of the control (provide variable valid names ie. no spaces prefarably api corresponding names e.g. userName)\n     */\n    name: string;\n    /**\n     * The actual control (TgrInput, TgrTextArea & TgrSelect)\n     */\n    controlType: T;\n    /**\n     * Checks if the field is required\n     */\n    isRequired: boolean;\n    /**\n     * Control placeholder\n     */\n    placeholder: string = \"\";\n\n    constructor(label: string, name: string, controlType: T, icon: string = \"fa fa-file-text-o\",\n        isRequired: boolean = false, placeholder: string = null) {\n        this.label = label;\n        this.name = name;\n        this.controlType = controlType;\n        this.icon = icon;\n        this.isRequired = isRequired;\n        this.placeholder = placeholder ? placeholder : label;\n    }\n\n}\n/**\n * Used to represent html input with options:\n * type: default to text,  maxLength, minLength, min, max\n */\nexport class TgrInput{\n    /**\n     * Type of input e.g. text, number, date\n     */\n    type: string;\n    /**\n     * Used to validate length of the input\n     */\n    maxLength: number;\n    /**\n     * Used to validate minimum input length\n     */\n    minLength: number;\n    /**\n     * Used to validate number inputs\n     */\n    min: number;\n    /**\n     * Used to validate number inputs\n     */\n    max: number;\n\n    constructor(type: string = \"text\") {\n        this.type = type;\n        this.minLength = this.min = 0;\n        this.maxLength = 4000;\n        this.max = 1000000000;\n    }\n}\n\n/**\n * Represents html textarea input\n */\nexport class TgrTextarea{\n    /**\n     * Number textarea columns\n     */\n    cols?: number;\n    /**\n     * Number of textarea rows\n     */\n    rows?: number;\n    /**\n     * Validate maximum input length\n     */\n    maxLength: number;\n    /**\n     * Validate minimum input length\n     */\n    minLength: number;\n\n    constructor(cols: number = 5, rows: number = 1){\n        this.cols = cols;\n        this.rows = rows;\n        this.maxLength = 4000;\n        this.minLength = 0\n    }\n}\n\n/**\n * Represents html select control\n */\nexport class TgrSelect {\n    /**\n     * Select options\n     */\n    options: Array<TgrSelectOption>;\n\n    constructor(options: Array<TgrSelectOption>){\n        this.options = options;\n    }\n\n}\n\nexport class TgrSelectOption{\n    /**\n     * Option value\n     */\n    value: string | number;\n    /**\n     * Option text/label\n     */\n    text: string;\n\n    constructor(value: string, text: string = null){\n        this.value = value;\n        this.text = text ? text : value;\n    }\n\n}\n\n","import { Component, OnInit, EventEmitter, Input, Output, ViewChild, AfterViewInit } from '@angular/core';\nimport { NgForm, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Page } from '../entities/wrappers/page';\nimport { MlkDynamicControl, MlkInput, MlkTextarea, MlkSelect } from '../entities/wrappers/mlk-dynamic-control';\nimport { ResponseWrapper } from '../entities/wrappers/response-wrapper';\nimport { StewardClientService } from '../steward-client.service';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { NativeDateAdapter, PageEvent, MatSort, Sort } from '@angular/material';\nimport { TgrDynamicControl, TgrInput, TgrSelect, TgrTextarea } from '../entities/tgr-dynamic-control';\nimport { DatePipe } from '@angular/common';\n\n/**\n * Format angular date to dd-mm-yyyy\n */\nexport class AppDateAdapter extends NativeDateAdapter {\n\n  /**\n   * Parse date to dd-mm-yyyy\n   * @param date  date input\n   * @param displayFormat expects to be input string\n   */\n  format(date: Date, displayFormat: Object): string {\n\n    if (displayFormat === 'input') {\n\n      var day = date.getDate();\n      var month = date.getMonth() + 1;\n      const year = date.getFullYear();\n      let dayString: string;\n      let monthString: string;\n\n      if (day < 10) {\n        dayString = '0' + day;\n      } else {\n        dayString = '' + day;\n      }\n\n      if (month < 10) {\n        monthString = '0' + month;\n      } else {\n        monthString = '' + month;\n      }\n\n      return `${year}-${monthString}-${dayString}`;\n    }\n\n    return date.toDateString();\n  }\n}\n/**\n * Material date formats\n */\nexport const APP_DATE_FORMATS =\n{\n  parse: {\n    dateInput: { month: 'numeric', year: 'numeric', day: 'numeric' },\n  },\n  display: {\n    dateInput: 'input',\n    monthYearLabel: { year: 'numeric', month: 'numeric' },\n    dateA11yLabel: { year: 'numeric', month: 'numeric', day: 'numeric' },\n    monthYearA11yLabel: { year: 'numeric', month: 'long' },\n  }\n};\n\n\n@Component({\n  selector: 'tgr-material-table',\n  templateUrl: './tgr-material-table.component.html',\n  styleUrls: ['./tgr-material-table.component.css'],\n  providers: [\n    { provide: DateAdapter, useClass: AppDateAdapter },\n    {\n      provide: MAT_DATE_FORMATS, useValue: APP_DATE_FORMATS\n    }\n  ]\n})\nexport class TgrMaterialTableComponent implements OnInit, AfterViewInit {\n\n  displayedColumns: string[] = [];\n  @Output() selection: SelectionModel<any> = new SelectionModel<any>(true, []);\n  @Output() rowSelection = new EventEmitter<SelectionModel<any>>();\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n\n  @Input() columns: Array<TgrMatTableColumn> = [];\n  @Input() enableCheckbox: boolean = true;\n  @Input() endpoint: string;\n  @Input() moreActions: TgrMoreActions;\n  @Output() actionsEvent = new EventEmitter<TgrMoreActionData>()\n  @Input() filterComponents: Array<TgrDynamicControl<any>> = [];\n  @Input() params: Map<string, any>;\n  @Input() showDefaultFilters: boolean = true;\n  @Input() showNumberColumn: boolean = false;\n  /**\n   * Additional headers to be appended on the request headers\n   */\n  @Input() headers: Map<string, string | string[]>;\n  page: Page<any>;\n  selected = [];\n  // @ViewChild(DatatableComponent) table: DatatableComponent;\n  filter: Object = {};\n  filterForm: FormGroup;\n  private sortParams: Sort;\n  /**\n   * Checks if server request has been processed\n   */\n  isLoadingResults = false;\n  /**\n   * Date pipe\n   */\n  private datePipe: DatePipe\n\n  constructor(private sterwardService: StewardClientService<ResponseWrapper<Page<any>>, any>) {\n    this.page = new Page();\n    this.page.content = [];\n    this.datePipe = new DatePipe('en-US');\n  }\n\n  /**\n   * Generate form control from filterComponents and also appending default controls ie. date filter and search controls\n   */\n  ngOnInit() {\n    //intializing table columns\n    if (this.enableCheckbox) {\n      this.displayedColumns.push('checkbox');\n    }\n    if (this.showNumberColumn) {\n      this.displayedColumns.push('no');\n    }\n    this.columns.forEach(c => {\n      this.displayedColumns.push(c.fieldName);\n    });\n    if (this.moreActions) {\n      this.displayedColumns.push('actions');\n    } else {\n      console.debug('moreActions not injected skipping rendering \\'More Actions\\' column');\n    }\n    let group = {};\n    this.filterComponents.forEach(comp => {\n      let validators: Array<any> = [];\n      if (comp.isRequired) {\n        validators.push(Validators.required);\n      }\n\n      if (comp.controlType instanceof TgrInput || comp.controlType instanceof TgrTextarea) {\n        validators.push(Validators.minLength(comp.controlType.minLength));\n        validators.push(Validators.maxLength(comp.controlType.maxLength));\n      }\n\n      if (comp.controlType instanceof TgrInput) {\n        validators.push(Validators.max(comp.controlType.max));\n        validators.push(Validators.min(comp.controlType.min));\n      }\n      group[comp.name] = new FormControl('', validators)\n    });\n    //add default controls\n    group['from'] = new FormControl('', Validators.maxLength(100));\n    group['to'] = new FormControl('', Validators.maxLength(100));\n    group['needle'] = new FormControl('', Validators.maxLength(200));\n    this.filterForm = new FormGroup(group);\n    this.loadPage({ offset: 0, limit: this.page.size }, null);\n  }\n\n  /**\n   * After view intialization fire selection event\n   */\n  ngAfterViewInit(): void {\n    this.rowSelection.emit(this.selection);\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.page.content.length;\n    return numSelected == numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.page.content.forEach(row => this.selection.select(row));\n  }\n\n  /**\n   * Used to emit click event of the actions\n   * @param event Actions data\n   */\n  onActionClick(event: TgrMoreActionData) {\n    this.actionsEvent.emit(event);\n  }\n\n  /**\n   * Process server request of datable\n   *\n   * @param pageInfo Page variables\n   * @param filters Filter variables\n   */\n  loadPage(pageInfo, filters) {\n    if (!this.endpoint) {\n      return;\n    }\n    this.isLoadingResults = true;\n    let request: Map<string, any>;\n    if (filters) {\n      request = filters;\n    } else {\n      request = new Map();\n    }\n    if (this.params) {\n      this.params.forEach((value, key) => {\n        if (key != null && key !== undefined) { // ignore null values\n          request.set(key, value);\n        }\n      });\n    }\n    request.set('page', pageInfo.offset);\n    request.set('size', pageInfo.limit);\n    this.sterwardService.get(this.endpoint, request, this.headers).subscribe(response => {\n      if (response.status === 200) {\n        if (this.showNumberColumn) {\n          let no = 1 + (response.data.number * response.data.size);\n          response.data.content.forEach((val) => {\n            val.no = no++;\n          });\n        }\n        this.page = response.data;\n      }\n      this.isLoadingResults = false;\n    },\n      error => {\n        console.debug('Server request has failed');\n        this.isLoadingResults = false;\n      });\n\n  }\n\n  /**\n   * Used tolisten to pagination events/actions\n   * @param page page variables\n   */\n  pageEvent(page: PageEvent) {\n    this.loadPage({ limit: page.pageSize, offset: page.pageIndex }, this.getFilters());\n  }\n\n\n  /**\n   * Used to processing table sorting\n   * @param event Sort variables\n   */\n  processSorting(event: Sort) {\n    this.sortParams = event;\n    this.loadPage({ limit: this.page.size, offset: 0 }, this.getFilters());\n  }\n\n  /**\n   * Used to get filter entries from the filter form. Also adds sort parameters to request\n   */\n  private getFilters() {\n    const f: Map<string, any> = new Map<string, any>();\n    Object.keys(this.filterForm.value).forEach((val, key) => {\n      // console.debug(\"Key is \" + key + \" and value \" + val);\n      if (this.filterForm.value[val]) {\n        if (val === 'from' || val === 'to') {\n          f.set(val, this.datePipe.transform(this.filterForm.value[val], 'yyyy-MM-dd'));\n        } else {\n          f.set(val, this.filterForm.value[val]);\n        }\n      }\n    })\n    // add sorting parameters\n    if (this.sortParams) {\n      f.set('sort', this.sortParams.active + ',' + this.sortParams.direction);\n    }\n    return f;\n  }\n\n  /**\n   * Used to process table filter. If date filter is not provide the from value is\n   * set to 2018-01-01 and to value is set to 1 year from today\n   *\n   * @deprecated\n   */\n  processFilter() {\n    this.loadPage({ offset: this.page.number, limit: this.page.size }, this.getFilters());\n  }\n\n  /**\n   * Used to check if additional control is input\n   *\n   * @param control additional control\n   */\n  isInput(control: any) {\n    return control instanceof TgrInput;\n  }\n\n  /**\n   * Used to check if miliki control is select\n   *\n   * @param control Select control\n   */\n  isSelect(control: any) {\n    return control instanceof TgrSelect;\n  }\n\n  /**\n   * Used to check if miliki control is textarea\n   */\n  isTextArea(control: any) {\n    return control instanceof TgrTextarea;\n  }\n\n  /**\n   * Used to format date to string yyyy-MM-dd\n   * @param date Date variable\n   */\n  getFormattedDate(date) {\n    const year = date.getFullYear();\n\n    let month = (1 + date.getMonth()).toString();\n    month = month.length > 1 ? month : '0' + month;\n\n    let day = date.getDate().toString();\n    day = day.length > 1 ? day : '0' + day;\n\n    return year + '-' + month + '-' + day;\n  }\n\n  getFieldValue(data: object, column: TgrMatTableColumn) {\n    if (column.callback) {\n      return column.callback(data);\n    }\n    const k: Array<string> = column.fieldName.split('.');\n    const value = this.sterwardService.getObjectValue(data, k);\n    return column.isDateColumn ? this.datePipe.transform(value, 'medium') : value;\n  }\n\n  /**\n   * Refresh data table values\n   */\n  refreshTable() {\n    console.debug('Refreshed data tables');\n    this.loadPage({ offset: this.page.number, limit: this.page.size }, this.getFilters());\n  }\n\n}\n/**\n * Used to define datatable columns with attributes (columnName, fieldName, width, sortable, canAutoResize,\n * draggable, resizable, isDateColumn)\n */\nexport interface TgrMatTableColumn {\n  /**\n   * column title\n   */\n  columnName: string;\n  /**\n   * Server side response field corresponding to the column i.e fullName may correspond to Name column\n   */\n  fieldName: string;\n  /**\n   * Width of the column\n   */\n  width?: number;\n  /**\n   * Enable sorting in a column\n   */\n  sortable?: boolean;\n  // /**\n  //  * Makes a column resizable\n  //  */\n  // canAutoResize?: boolean;\n  // /**\n  //  * Enables a column to be draggable\n  //  */\n  // draggable?: boolean;\n  // /**\n  //  * Makes a column resizable\n  //  */\n  // resizeable?: boolean;\n  /**\n   * Used to enable formating timestamp to string date\n   */\n  isDateColumn?: boolean;\n  /**\n   * Hide on small device less than 576px\n   */\n  hideOnXs?: boolean;\n  /**\n   * Callback function used for cell rendering.\n   *  Note: Function results are not sanitised\n   */\n  callback?: (data: any) => object;\n}\n\n/**\n * Used to display more actions column and the end of the table\n */\nexport class TgrMoreActions {\n  /**\n   * Action Column name e.g. More Actions\n   */\n  name = 'Actions';\n  /**\n   * Field name id from the server response e.g userId\n   * @deprecated\n   */\n  idFieldName = 'id';\n  /**\n   * Actions e.g. Edit, Delete\n   */\n  actions: Array<TgrMoreActionData>;\n  /**\n   * Callback function\n   */\n  callback?: (data: any) => object;\n\n  /**\n   * @param actions Rows action data\n   * @param id Id field name currently deprecated\n   * @param name Actions column name\n   * @param callback Rows callback function for data sanitization\n   */\n  constructor(actions: Array<TgrMoreActionData>, id?: string, name?: string, callback?: (data: any) => object) {\n    this.actions = actions;\n    this.name = name;\n    this.idFieldName = id;\n    this.callback = callback;\n  }\n\n}\n\nexport interface TgrMoreActionData {\n  /**\n   * Never mind this field it will be used by the library\n   * @deprecated\n   */\n  id?: any;\n  /**\n   * Action name e.g. Edit, Delete\n   */\n  actionName: any;\n  /**\n   * \n   */\n  data?: object;\n}\n","import { NgModule } from '@angular/core';\nimport { StewardClientComponent } from './steward-client.component';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { StewardConfig, ClientDetails } from './steward-client.service';\nimport { TgrMaterialTableComponent } from './tgr-material-table/tgr-material-table.component';\nimport {\n  MatInputModule,\n  MatTableModule,\n  MatCheckboxModule,\n  MatIconModule,\n  MatDatepickerModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatSelectModule,\n  MatButtonModule,\n  MatSortModule,\n  MatMenuModule,\n  MatProgressSpinnerModule,\n  MatAutocompleteModule\n} from '@angular/material';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    HttpClientModule,\n    MatInputModule,\n    MatTableModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatSortModule,\n    MatMenuModule,\n    MatProgressSpinnerModule,\n    MatAutocompleteModule\n  ],\n  declarations: [\n    StewardClientComponent,\n    TgrMaterialTableComponent,\n  ],\n  exports: [StewardClientComponent, TgrMaterialTableComponent,]\n})\nexport class StewardClientModule {\n  static forRoot(config: StewardConfig, clientDetails?: ClientDetails) {\n    return {\n      ngModule: StewardClientModule,\n      providers: [ {provide: StewardConfig, useValue: config}, {provide: ClientDetails, useValue: clientDetails} ]\n    }\n  }\n}\n"]}