{"version":3,"sources":["webpack:///./dist/steward-client/fesm5/steward-client.js","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/material-table/material-table.component.css","webpack:///./src/app/material-table/material-table.component.html","webpack:///./src/app/material-table/material-table.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAkF;AAClB;AACnD;AACQ;AACF;AAC4D;AAC9B;AACjC;AACO;;AAEvB;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF;AACnF;AACA;AACA;AACA,kDAAkD;AAClD,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gFAAgF,wBAAwB;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,+EAA+E,wBAAwB;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uEAAuE,oDAAoD;AAC3H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,SAAS;AACT;AACA,4FAAuC,0CAA0C;AACjF;AACA;AACA;AACA;AACA,oEAAoE,mBAAmB;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT,oEAAoE,gFAA2B,0CAA0C,GAAG;AAC5I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT,mEAAmE,gFAA2B,0CAA0C,GAAG;AAC3I;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,iEAAmB;AAC5B;AACA;AACA,uDAAuD;AACvD,SAAS,wEAAmB;AAC5B,SAAS;AACT,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,yDAAyD,WAAW;AACpE;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4BAA4B;AAC1D,oCAAoC,mBAAmB;AACvD,qCAAqC,oBAAoB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,eAAe;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,UAAU;AACxC,8BAA8B,UAAU;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,8BAA8B,aAAa;AAC3C;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,uBAAuB,mCAAmC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kDAAkD;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA,0XAA0X,eAAe,oeAAoe,qBAAqB,yGAAyG,QAAQ,2xBAA2xB,qBAAqB,yIAAyI,+BAA+B,wIAAwI,+BAA+B,8IAA8I,yBAAyB,gIAAgI,yBAAyB,0nIAA0nI,uGAAuG,wxBAAwxB,4BAA4B,gEAAgE,MAAM,mBAAmB,kqBAAkqB,OAAO,sTAAsT,OAAO;AACtgR;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,wDAAwD;AACxD,SAAS;AACT,MAAM;AACN;AACA,mBAAmB,4DAAc;AACjC,0BAA0B,4DAAc;AACxC,oBAAoB,4DAAc;AAClC,uBAAuB,4DAAc;AACrC,0BAA0B,6DAAe;AACzC,4BAA4B,4DAAc;AAC1C,kBAAkB,4DAAc;AAChC,iBAAiB,qJAA+C;AAChE;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AA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","file":"main.js","sourcesContent":["import { Injectable, Component, EventEmitter, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams, HttpClientModule } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { __spread } from 'tslib';\nimport { FormGroup, FormControl, Validators, ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { DatatableComponent, NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { Queue } from 'queue-typescript';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Wraps server response\n * @template T\n */\nvar  /**\n * Wraps server response\n * @template T\n */\nResponseWrapper = /** @class */ (function () {\n    function ResponseWrapper() {\n    }\n    return ResponseWrapper;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nvar StewardConfig = /** @class */ (function () {\n    function StewardConfig() {\n    }\n    return StewardConfig;\n}());\n/**\n * @template T, E\n */\nvar StewardClientService = /** @class */ (function () {\n    function StewardClientService(http, config) {\n        this.http = http;\n        this.base_url = \"/\";\n        this.base_url = config.base_url;\n        if (config.headers) {\n            this.headers = config.headers.append('Content-Type', 'application/json; charset=utf-8');\n        }\n        else {\n            this.headers = new HttpHeaders({\n                'Content-Type': 'application/json; charset=utf-8'\n            });\n        }\n        if (config.access_token) {\n            //append access token if the environment has access token\n            this.headers = this.headers.append('Authorization', \"Bearer \" + config.access_token);\n        }\n    }\n    /**\n     * Used to handle http post requests\n     * @param endpoint expects either an endpoint or url\n     * @param data a valid object\n     */\n    /**\n     * Used to handle http post requests\n     * @param {?} endpoint expects either an endpoint or url\n     * @param {?} data a valid object\n     * @return {?}\n     */\n    StewardClientService.prototype.post = /**\n     * Used to handle http post requests\n     * @param {?} endpoint expects either an endpoint or url\n     * @param {?} data a valid object\n     * @return {?}\n     */\n    function (endpoint, data) {\n        return this.http.post(this.serviceURL(endpoint), JSON.stringify(data), { headers: this.headers }).pipe(catchError(this.handleError()));\n    };\n    /**\n     * Used to handle http post requests\n     * @param endpoint expects either an endpoint or url\n     */\n    /**\n     * Used to handle http post requests\n     * @param {?} endpoint expects either an endpoint or url\n     * @param {?} data\n     * @return {?}\n     */\n    StewardClientService.prototype.put = /**\n     * Used to handle http post requests\n     * @param {?} endpoint expects either an endpoint or url\n     * @param {?} data\n     * @return {?}\n     */\n    function (endpoint, data) {\n        return this.http.put(this.serviceURL(endpoint), JSON.stringify(data), { headers: this.headers }).pipe(catchError(this.handleError()));\n    };\n    /**\n     * Handles http delete request\n     * @param endpoint expects either an endpoint or url\n     * @param data\n     */\n    /**\n     * Handles http delete request\n     * @param {?} endpoint expects either an endpoint or url\n     * @param {?} data\n     * @return {?}\n     */\n    StewardClientService.prototype.delete = /**\n     * Handles http delete request\n     * @param {?} endpoint expects either an endpoint or url\n     * @param {?} data\n     * @return {?}\n     */\n    function (endpoint, data) {\n        return this.http.request('delete', this.serviceURL(endpoint), { headers: this.headers, body: JSON.stringify(data) }).pipe(catchError(this.handleError()));\n    };\n    /**\n     * Handles http get request\n     * @param endpoint expects either an endpoint or url\n     * @param data\n     */\n    /**\n     * Handles http get request\n     * @param {?} endpoint expects either an endpoint or url\n     * @param {?=} data\n     * @return {?}\n     */\n    StewardClientService.prototype.get = /**\n     * Handles http get request\n     * @param {?} endpoint expects either an endpoint or url\n     * @param {?=} data\n     * @return {?}\n     */\n    function (endpoint, data) {\n        /** @type {?} */\n        var options = {\n            headers: this.headers,\n            params: this.getHttpParams(data)\n        };\n        return this.http.get(this.serviceURL(endpoint), options).pipe(catchError(this.handleError()));\n    };\n    /**\n     * Fetch a file\n     * @param endpoint expects either an endpoint or url\n     * @param data\n     */\n    /**\n     * Fetch a file\n     * @param {?} endpoint expects either an endpoint or url\n     * @param {?=} data\n     * @return {?}\n     */\n    StewardClientService.prototype.getFile = /**\n     * Fetch a file\n     * @param {?} endpoint expects either an endpoint or url\n     * @param {?=} data\n     * @return {?}\n     */\n    function (endpoint, data) {\n        /** @type {?} */\n        var options = {\n            params: this.getHttpParams(data)\n        };\n        return this.http.get(this.serviceURL(endpoint) + '?access_token=' + this.token, options).pipe(catchError(this.handleError()));\n    };\n    /**\n     * if\n     * @param endpoint expects either an endpoint or url\n     * @param data\n     * @param headers\n     */\n    /**\n     * if\n     * @param {?} endpoint expects either an endpoint or url\n     * @param {?} data\n     * @param {?=} headers\n     * @return {?}\n     */\n    StewardClientService.prototype.postFormData = /**\n     * if\n     * @param {?} endpoint expects either an endpoint or url\n     * @param {?} data\n     * @param {?=} headers\n     * @return {?}\n     */\n    function (endpoint, data, headers) {\n        /** @type {?} */\n        var formData = new FormData();\n        Object.keys(data).forEach(function (key) {\n            formData.append(key, data[key]);\n        });\n        if (this.headers.get(\"Authorization\") && (!headers)) {\n            headers = new HttpHeaders({ 'Authorization': 'Bearer ' + this.token });\n        }\n        else if (!headers) {\n            headers = new HttpHeaders();\n        }\n        return this.http.post(this.serviceURL(endpoint), formData, { headers: headers }).pipe(catchError(this.handleError()));\n    };\n    /**\n     * handle http form data request\n     * @param endpoint expects either an endpoint or url\n     * @param data expects a valid object\n     */\n    /**\n     * handle http form data request\n     * @param {?} endpoint expects either an endpoint or url\n     * @param {?} data expects a valid object\n     * @return {?}\n     */\n    StewardClientService.prototype.postFormDataMultipart = /**\n     * handle http form data request\n     * @param {?} endpoint expects either an endpoint or url\n     * @param {?} data expects a valid object\n     * @return {?}\n     */\n    function (endpoint, data) {\n        /** @type {?} */\n        var formData = new FormData();\n        Object.keys(data).forEach(function (key) {\n            if (Array.isArray(data[key])) {\n                data[key].forEach(function (k2) {\n                    formData.append(key, k2);\n                });\n            }\n            else {\n                formData.append(key, data[key]);\n            }\n        });\n        return this.http.post(this.serviceURL(endpoint), formData, { headers: new HttpHeaders({ 'Authorization': 'Bearer ' + this.token }) }).pipe(catchError(this.handleError()));\n    };\n    /**\n     * Handles http put form data request\n     * @param endpoint expects either an endpoint or url\n     * @param data valid object\n     */\n    /**\n     * Handles http put form data request\n     * @param {?} endpoint expects either an endpoint or url\n     * @param {?} data valid object\n     * @return {?}\n     */\n    StewardClientService.prototype.putFormDataMultiPart = /**\n     * Handles http put form data request\n     * @param {?} endpoint expects either an endpoint or url\n     * @param {?} data valid object\n     * @return {?}\n     */\n    function (endpoint, data) {\n        /** @type {?} */\n        var formData = new FormData();\n        Object.keys(data).forEach(function (key) {\n            if (Array.isArray(data[key])) {\n                data[key].forEach(function (k2) {\n                    formData.append(key, k2);\n                });\n            }\n            else {\n                formData.append(key, data[key]);\n            }\n        });\n        return this.http.put(this.serviceURL(endpoint), formData, { headers: new HttpHeaders({ 'Authorization': 'Bearer ' + this.token }) }).pipe(catchError(this.handleError()));\n    };\n    /**\n     * Convert map to HttpParams\n     * @param {?} data\n     * @return {?}\n     */\n    StewardClientService.prototype.getHttpParams = /**\n     * Convert map to HttpParams\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        if (data == undefined) {\n            return new HttpParams();\n        }\n        /** @type {?} */\n        var httpParams = new HttpParams();\n        data.forEach(function (value, key) {\n            httpParams = httpParams.append(key, value);\n        });\n        return httpParams;\n    };\n    /**\n     * Used to catch exception thrown by http client returns internal server error\n     * if status 500 is encountered\n     * @template ResponseWrapper\n     * @return {?}\n     */\n    StewardClientService.prototype.handleError = /**\n     * Used to catch exception thrown by http client returns internal server error\n     * if status 500 is encountered\n     * @template ResponseWrapper\n     * @return {?}\n     */\n    function () {\n        return function (error) {\n            /** @type {?} */\n            var res = new ResponseWrapper();\n            //            console.error(error); // log to console instead\n            if (error.status == 500) {\n                res.status = error.status;\n                res.message = 'Sorry internal server error occured please try again later';\n            }\n            else {\n                res.status = error.status;\n                res.message = error.error.message;\n                res.data = error.error.data;\n            }\n            return of(res);\n        };\n    };\n    /**\n     * Used to render action buttons\n     */\n    /**\n     * Used to render action buttons\n     * @param {?} id\n     * @return {?}\n     */\n    StewardClientService.renderMore = /**\n     * Used to render action buttons\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        return '<div class=\\'actions-buttons center\\' id=\\'' + id + '\\'><i class=\\'fa fa-check\\' title=\\'Approve\\'></i> <i class=\\'fa fa-ban\\' title=\\'Decline\\'></i></div>';\n    };\n    /**\n     * Handles datatable request\n     * @param {?} endpoint expects either an endpoint or url\n     * @param {?=} data expects a valid map\n     * @return {?}\n     */\n    StewardClientService.prototype.intiateDataTable = /**\n     * Handles datatable request\n     * @param {?} endpoint expects either an endpoint or url\n     * @param {?=} data expects a valid map\n     * @return {?}\n     */\n    function (endpoint, data) {\n        /** @type {?} */\n        var options = {\n            headers: this.headers,\n            params: this.getHttpParams(data)\n        };\n        return this.http.get(this.serviceURL(endpoint), options).pipe(catchError(this.handleError()));\n    };\n    /**\n     * Used to validate if a string is a valid URL\n     * @param {?} url\n     * @return {?}\n     */\n    StewardClientService.prototype.isURL = /**\n     * Used to validate if a string is a valid URL\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) {\n        try {\n            new URL(url);\n            return true;\n        }\n        catch (_) {\n            return false;\n        }\n    };\n    /**\n     * If the url parameter is an endpoint it appends to the base url\n     * @see base_url\n     * @param {?} url\n     * @return {?}\n     */\n    StewardClientService.prototype.serviceURL = /**\n     * If the url parameter is an endpoint it appends to the base url\n     * @see base_url\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) {\n        return (this.isURL(url)) ? url : this.base_url + url;\n    };\n    StewardClientService.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    StewardClientService.ctorParameters = function () { return [\n        { type: HttpClient },\n        { type: StewardConfig }\n    ]; };\n    return StewardClientService;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nvar StewardClientComponent = /** @class */ (function () {\n    function StewardClientComponent() {\n    }\n    /**\n     * @return {?}\n     */\n    StewardClientComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n    };\n    StewardClientComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'stw-steward-client',\n                    template: \"\\n    <p>\\n      steward-client works!\\n    </p>\\n  \",\n                    styles: []\n                },] },\n    ];\n    /** @nocollapse */\n    StewardClientComponent.ctorParameters = function () { return []; };\n    return StewardClientComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Datable page used to wrapper server content response\n * @template T\n */\nvar  /**\n * Datable page used to wrapper server content response\n * @template T\n */\nPage = /** @class */ (function () {\n    function Page() {\n        /**\n         * Number of items per page same as limit\n         */\n        this.size = 10;\n        /**\n         * Total items available on the server\n         */\n        this.totalElements = 0;\n        /**\n         * Total number of pages present\n         */\n        this.totalPages = 0;\n        /**\n         * Checks if is the first page\n         */\n        this.first = true;\n        /**\n         * Checks if it is the last page\n         */\n        this.last = false;\n        /**\n         * The actual page content\n         */\n        this.content = [];\n        /**\n         * Used to map sort parameters\n         */\n        this.sorted = new Sort();\n        /**\n         * Current page number\n         */\n        this.number = 0;\n    }\n    return Page;\n}());\n/**\n * used to map sort request\n */\nvar  /**\n * used to map sort request\n */\nSort = /** @class */ (function () {\n    function Sort() {\n        this.sorted = false;\n        this.unsorted = true;\n    }\n    return Sort;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Represents dynamic html controls (Input, TextArea and Select)\n * @template T\n */\nvar  /**\n * Represents dynamic html controls (Input, TextArea and Select)\n * @template T\n */\nMlkDynamicControl = /** @class */ (function () {\n    function MlkDynamicControl(label, name, controlType, icon, isRequired, placeholder) {\n        if (icon === void 0) { icon = \"fa fa-file-text-o\"; }\n        if (isRequired === void 0) { isRequired = true; }\n        if (placeholder === void 0) { placeholder = null; }\n        /**\n         * Control placeholder\n         */\n        this.placeholder = \"\";\n        this.label = label;\n        this.name = name;\n        this.controlType = controlType;\n        this.icon = icon;\n        this.isRequired = isRequired;\n        this.placeholder = placeholder ? placeholder : label;\n    }\n    return MlkDynamicControl;\n}());\n/**\n * Used to represent html input with options:\n * type: default to text,  maxLength, minLength, min, max\n */\nvar  /**\n * Used to represent html input with options:\n * type: default to text,  maxLength, minLength, min, max\n */\nMlkInput = /** @class */ (function () {\n    function MlkInput(type) {\n        if (type === void 0) { type = \"text\"; }\n        /**\n         * Type of input e.g. text, number, date\n         */\n        this.type = \"text\";\n        this.type = type;\n        this.minLength = this.min = 0;\n        this.maxLength = 4000;\n        this.max = 1000000000;\n    }\n    return MlkInput;\n}());\n/**\n * Represents html textarea input\n */\nvar  /**\n * Represents html textarea input\n */\nMlkTextarea = /** @class */ (function () {\n    function MlkTextarea(cols, rows) {\n        if (cols === void 0) { cols = 5; }\n        if (rows === void 0) { rows = 1; }\n        this.cols = cols;\n        this.rows = rows;\n        this.maxLength = 4000;\n        this.minLength = 0;\n    }\n    return MlkTextarea;\n}());\n/**\n * Represents html select control\n */\nvar  /**\n * Represents html select control\n */\nMlkSelect = /** @class */ (function () {\n    function MlkSelect(options) {\n        this.options = options;\n    }\n    return MlkSelect;\n}());\nvar MlkSelectOption = /** @class */ (function () {\n    function MlkSelectOption(value, text) {\n        if (text === void 0) { text = null; }\n        this.value = value;\n        this.text = text ? text : value;\n    }\n    return MlkSelectOption;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nvar MlkDatatableComponent = /** @class */ (function () {\n    function MlkDatatableComponent(sterwardService) {\n        this.sterwardService = sterwardService;\n        this.columns = [];\n        this.enableCheckbox = true;\n        this.onActionsEvent = new EventEmitter();\n        this.filterComponents = [];\n        this.page = new Page();\n        this.selected = [];\n        this.filter = {};\n    }\n    /**\n     * Generate form control from filterComponents and also appending default controls ie. date filter and search controls\n     */\n    /**\n     * Generate form control from filterComponents and also appending default controls ie. date filter and search controls\n     * @return {?}\n     */\n    MlkDatatableComponent.prototype.ngOnInit = /**\n     * Generate form control from filterComponents and also appending default controls ie. date filter and search controls\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var group = {};\n        this.filterComponents.forEach(function (comp) {\n            /** @type {?} */\n            var validators = [];\n            if (comp.isRequired) {\n                validators.push(Validators.required);\n            }\n            if (comp.controlType instanceof MlkInput || comp.controlType instanceof MlkTextarea) {\n                validators.push(Validators.minLength(comp.controlType.minLength));\n                validators.push(Validators.maxLength(comp.controlType.maxLength));\n            }\n            if (comp.controlType instanceof MlkInput) {\n                validators.push(Validators.max(comp.controlType.max));\n                validators.push(Validators.min(comp.controlType.min));\n            }\n            group[comp.name] = new FormControl('', validators);\n        });\n        //add default controls\n        group['from'] = new FormControl('', Validators.maxLength(100));\n        group['to'] = new FormControl('', Validators.maxLength(100));\n        group['needle'] = new FormControl('', Validators.maxLength(200));\n        this.filterForm = new FormGroup(group);\n        this.loadPage({ offset: 0, limit: this.page.size }, null);\n    };\n    /**\n     * Used to emit click event of the actions\n     * @param event\n     */\n    /**\n     * Used to emit click event of the actions\n     * @param {?} event\n     * @return {?}\n     */\n    MlkDatatableComponent.prototype.onActionClick = /**\n     * Used to emit click event of the actions\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        this.onActionsEvent.emit(event);\n    };\n    /**\n     * Process server request of datable\n     * @param pageInfo\n     * @param filters\n     */\n    /**\n     * Process server request of datable\n     * @param {?} pageInfo\n     * @param {?} filters\n     * @return {?}\n     */\n    MlkDatatableComponent.prototype.loadPage = /**\n     * Process server request of datable\n     * @param {?} pageInfo\n     * @param {?} filters\n     * @return {?}\n     */\n    function (pageInfo, filters) {\n        var _this = this;\n        if (!this.endpoint) {\n            return;\n        }\n        /** @type {?} */\n        var request;\n        if (filters) {\n            request = filters;\n        }\n        else {\n            request = new Map();\n        }\n        if (this.params) {\n            this.params.forEach(function (value, key) {\n                request.set(key, value);\n            });\n        }\n        request.set(\"page\", pageInfo.offset);\n        request.set(\"size\", pageInfo.limit);\n        this.sterwardService.get(this.endpoint, request).subscribe(function (response) {\n            if (response.status == 200) {\n                _this.page = response.data;\n            }\n        });\n    };\n    /**\n     * Used to handle select option\n     * @param event\n     */\n    /**\n     * Used to handle select option\n     * @param {?} event\n     * @return {?}\n     */\n    MlkDatatableComponent.prototype.onSelect = /**\n     * Used to handle select option\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MlkDatatableComponent.prototype.onActivate = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MlkDatatableComponent.prototype.updateFilter = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n    };\n    /**\n     * Used to process table filter. If date filter is not provide the from value is\n     * set to 2018-01-01 and to value is set to 1 year from today\n     * @param form\n     */\n    /**\n     * Used to process table filter. If date filter is not provide the from value is\n     * set to 2018-01-01 and to value is set to 1 year from today\n     * @param {?} form\n     * @return {?}\n     */\n    MlkDatatableComponent.prototype.processFilter = /**\n     * Used to process table filter. If date filter is not provide the from value is\n     * set to 2018-01-01 and to value is set to 1 year from today\n     * @param {?} form\n     * @return {?}\n     */\n    function (form) {\n        /** @type {?} */\n        var f = new Map(Object.entries(this.filterForm.value));\n        //validate date\n        if (!this.filterForm.get('from').touched) {\n            //if from is not populated remove from request\n            f.delete('from');\n            // this.filterForm.get('from').setValue('2018-01-01');\n        }\n        if (!this.filterForm.get('to').touched) {\n            //if to is not populated remove from request\n            f.delete('to');\n            // let toDate = new Date();\n            // toDate.setDate(toDate.getFullYear() + 1);\n            // this.filterForm.get('to').setValue(this.getFormattedDate(toDate));\n        }\n        this.loadPage({ offset: this.page.number, limit: this.page.size }, f);\n    };\n    /**\n     * Used to check if miliki control is input\n     * @param control\n     */\n    /**\n     * Used to check if miliki control is input\n     * @param {?} control\n     * @return {?}\n     */\n    MlkDatatableComponent.prototype.isInput = /**\n     * Used to check if miliki control is input\n     * @param {?} control\n     * @return {?}\n     */\n    function (control) {\n        return control instanceof MlkInput;\n    };\n    /**\n     * Used to check if miliki control is select\n     * @param control\n     */\n    /**\n     * Used to check if miliki control is select\n     * @param {?} control\n     * @return {?}\n     */\n    MlkDatatableComponent.prototype.isSelect = /**\n     * Used to check if miliki control is select\n     * @param {?} control\n     * @return {?}\n     */\n    function (control) {\n        return control instanceof MlkSelect;\n    };\n    /**\n     * Used to check if miliki control is textarea\n     */\n    /**\n     * Used to check if miliki control is textarea\n     * @param {?} control\n     * @return {?}\n     */\n    MlkDatatableComponent.prototype.isTextArea = /**\n     * Used to check if miliki control is textarea\n     * @param {?} control\n     * @return {?}\n     */\n    function (control) {\n        return control instanceof MlkTextarea;\n    };\n    /**\n     * Used to format date to string yyyy-MM-dd\n     * @param date\n     */\n    /**\n     * Used to format date to string yyyy-MM-dd\n     * @param {?} date\n     * @return {?}\n     */\n    MlkDatatableComponent.prototype.getFormattedDate = /**\n     * Used to format date to string yyyy-MM-dd\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        /** @type {?} */\n        var year = date.getFullYear();\n        /** @type {?} */\n        var month = (1 + date.getMonth()).toString();\n        month = month.length > 1 ? month : '0' + month;\n        /** @type {?} */\n        var day = date.getDate().toString();\n        day = day.length > 1 ? day : '0' + day;\n        return year + '-' + month + '-' + day;\n    };\n    /**\n     * @param {?} data\n     * @param {?} field\n     * @return {?}\n     */\n    MlkDatatableComponent.prototype.getFieldValue = /**\n     * @param {?} data\n     * @param {?} field\n     * @return {?}\n     */\n    function (data, field) {\n        /** @type {?} */\n        var k = field.split(\".\");\n        /** @type {?} */\n        var keys = new (Queue.bind.apply(Queue, __spread([void 0], k)))();\n        /** @type {?} */\n        var value = this.getObjectValue(data, keys);\n        return value;\n    };\n    /**\n     * Used to find key value based on the key sequence provided\n     * @param data expects an object\n     * @param keys i.e. user.gender.type.type\n     */\n    /**\n     * Used to find key value based on the key sequence provided\n     * @param {?} data expects an object\n     * @param {?} keys i.e. user.gender.type.type\n     * @return {?}\n     */\n    MlkDatatableComponent.prototype.getObjectValue = /**\n     * Used to find key value based on the key sequence provided\n     * @param {?} data expects an object\n     * @param {?} keys i.e. user.gender.type.type\n     * @return {?}\n     */\n    function (data, keys) {\n        var _this = this;\n        if ((!(data instanceof Object)) || (keys.length == 1)) {\n            return data[keys.tail];\n        }\n        /** @type {?} */\n        var value = null;\n        Object.keys(data).forEach(function (key) {\n            if ((key == keys.front) && (data[key] instanceof Object)) {\n                value = _this.getObjectValue(data[key], keys);\n            }\n            else if (key == keys.tail) {\n                value = data[key];\n            }\n        });\n        return value;\n    };\n    MlkDatatableComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'stw-mlk-datatable',\n                    template: \"<tgr-material-table></tgr-material-table>\\n<div class=\\\"card card-outline-default\\\">\\n    <div class=\\\"card-body\\\">\\n      <form (ngSubmit)=\\\"processFilter(filterForm)\\\" [formGroup]=\\\"filterForm\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-3  mb-3\\\" *ngFor=\\\"let control of filterComponents\\\">\\n            <label for=\\\"from\\\">{{control.label}}: </label>\\n            <div class=\\\"input-group\\\">\\n              <div class=\\\"input-group-append\\\">\\n                <span class=\\\"input-group-text  form-icon-default\\\">\\n                  <i [class]=\\\"control.icon\\\"></i>\\n                </span>\\n              </div>\\n  \\n              <select *ngIf=\\\"isSelect(control.controlType)\\\" class=\\\"form-control form-control-sm checking-field\\\" [formControlName]=\\\"control.name\\\">\\n                <option value=\\\"\\\" disabled selected>{{control.placeholder}}</option>\\n                <option *ngFor=\\\"let o of control.controlType.options\\\" [value]=\\\"o.value\\\">{{o.text}}</option>\\n              </select>\\n  \\n              <textarea *ngIf=\\\"isTextArea(control.controlType)\\\" [cols]=\\\"control.controlType.cols\\\" [rows]=\\\"control.controlType.rows\\\" class=\\\"form-control form-control-sm checking-field\\\"\\n                [placeholder]=\\\"control.placeholder\\\" [formControlName]=\\\"control.name\\\"></textarea>\\n  \\n              <input *ngIf=\\\"isInput(control.controlType)\\\" [type]=\\\"control.controlType.type\\\" [placeholder]=\\\"control.placeholder\\\" class=\\\"form-control form-control-sm checking-field\\\"\\n                [formControlName]=\\\"control.name\\\" />\\n            </div>\\n            <span class=\\\"help-block\\\" *ngIf=\\\"filterForm.get(control.name).touched\\\">\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"filterForm.get(control.name).hasError('required')\\\">{{control.placeholder}} is required</span>\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"filterForm.get(control.name).hasError('minlength')\\\">Minimum of {{control.controlType.minLength}} characters</span>\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"filterForm.get(control.name).hasError('maxlength')\\\">Maximum of {{control.controlType.maxLength}} characters</span>\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"filterForm.get(control.name).hasError('min')\\\">Should be greater than {{control.controlType.min}}</span>\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"filterForm.get(control.name).hasError('max')\\\">Should be less than {{control.controlType.max}}</span>\\n            </span>\\n          </div>\\n          <div class=\\\"col-md-3  mb-3\\\">\\n            <label for=\\\"from\\\">From: </label>\\n            <div class=\\\"input-group\\\">\\n              <div class=\\\"input-group-append\\\">\\n                <span class=\\\"input-group-text  form-icon-default\\\">\\n                  <i class=\\\"fa fa-calendar-o\\\"></i>\\n                </span>\\n              </div>\\n              <input type=\\\"date\\\" placeholder=\\\"From...\\\" class=\\\"form-control form-control-sm checking-field\\\"\\n                formControlName=\\\"from\\\" />\\n            </div>\\n            <span class=\\\"help-block\\\" *ngIf=\\\"filterForm.get('from').touched\\\">\\n                <span class=\\\"text-danger\\\" *ngIf=\\\"filterForm.get('from').hasError('maxlength')\\\">Maximum of 100 characters</span>\\n            </span>\\n          </div>\\n          <div class=\\\"col-md-3  mb-3\\\">\\n            <label for=\\\"from\\\">To: </label>\\n            <div class=\\\"input-group\\\">\\n              <div class=\\\"input-group-append\\\">\\n                <span class=\\\"input-group-text  form-icon-default\\\">\\n                  <i class=\\\"fa fa-calendar-o\\\"></i>\\n                </span>\\n              </div>\\n              <input type=\\\"date\\\" placeholder=\\\"To...\\\" class=\\\"form-control form-control-sm checking-field\\\"\\n                formControlName=\\\"to\\\" value=\\\"\\\" />\\n            </div>\\n            <span class=\\\"help-block\\\" *ngIf=\\\"filterForm.get('from').touched\\\">\\n                <span class=\\\"text-danger\\\" *ngIf=\\\"filterForm.get('from').hasError('maxlength')\\\">Maximum of 100 characters</span>\\n            </span>\\n          </div>\\n          <div class=\\\"col-md-3 mb-3\\\">\\n            <label for=\\\"search\\\">Search:</label>\\n            <div class=\\\"input-group\\\">\\n              <div class=\\\"input-group-prepend\\\">\\n                <span class=\\\"input-group-text form-icon-default\\\">\\n                  <i class=\\\"fa fa-search\\\"></i>\\n                </span>\\n              </div>\\n              <input formControlName=\\\"needle\\\" class=\\\"form-control form-control-sm checking-field\\\" type=\\\"text\\\"\\n                placeholder=\\\"Search...\\\" (keyup)=\\\"updateFilter($event)\\\" />\\n            </div>\\n          </div>\\n          <span class=\\\"help-block\\\" *ngIf=\\\"filterForm.get('from').touched\\\">\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"filterForm.get('from').hasError('maxlength')\\\">Maximum of 200 characters</span>\\n          </span>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"pull-right inline-buttons\\\">\\n              <button class=\\\"btn btn-secondary btn-sm\\\" type=\\\"reset\\\">\\n                <i class=\\\"fa fa-repeat\\\" aria-hidden=\\\"true\\\"></i>\\n                Reset\\n              </button>\\n              <button class=\\\"btn btn-primary btn-sm pull-right\\\" type=\\\"submit\\\">\\n                <i class=\\\"fa fa-sort-amount-asc\\\" aria-hidden=\\\"true\\\"></i>\\n                Filter\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n  \\n  <ngx-datatable #table class=\\\"bootstrap\\\" [headerHeight]=\\\"50\\\" [columnMode]=\\\"'force'\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"'auto'\\\"\\n    [rows]=\\\"page.content\\\" [selected]=\\\"selected\\\" [selectionType]=\\\"'checkbox'\\\" (activate)=\\\"onActivate($event)\\\" (select)='onSelect($event)'\\n    [count]=\\\"page.totalElements\\\" [offset]=\\\"page.number\\\" [externalPaging]=\\\"true\\\" [limit]=\\\"page.size\\\" (page)=\\\"loadPage($event, null)\\\">\\n    <ngx-datatable-column [width]=\\\"30\\\" [sortable]=\\\"false\\\" [canAutoResize]=\\\"false\\\" [draggable]=\\\"true\\\" [resizeable]=\\\"false\\\" [headerCheckboxable]=\\\"true\\\"\\n      [checkboxable]=\\\"true\\\" *ngIf=\\\"enableCheckbox\\\">\\n    </ngx-datatable-column>\\n    <ngx-datatable-column [canAutoResize]=\\\"(c.canAutoResize) ? c.canAutoResize : true\\\" [name]=\\\"c.columnName\\\" [width]=\\\"c.width\\\"\\n      [sortable]=\\\"(c.sortable) ? c.sortable : true\\\" [draggable]=\\\"(c.draggable) ? c.draggable : true\\\" [resizeable]=\\\"(c.resizeable) ? c.resizeable : true\\\"\\n      *ngFor=\\\"let c of columns\\\">\\n      <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n        <span>\\n            {{(c.isDateColumn)? (getFieldValue(row, c.fieldName) | date:'medium') : getFieldValue(row, c.fieldName)}}\\n        </span>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column [name]=\\\"moreActions.name\\\" *ngIf=\\\"moreActions\\\" [sortable]=\\\"false\\\" [canAutoResize]=\\\"false\\\">\\n      <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n        <span>\\n          <div class=\\\"input-group-prepend\\\">\\n            <button class=\\\"btn btn-sm btn-outline-secondary dropdown-toggle\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\"\\n              aria-expanded=\\\"false\\\">\\n              <i class=\\\"fa fa-list-ul\\\" aria-hidden=\\\"true\\\"></i>\\n            </button>\\n            <div class=\\\"dropdown-menu\\\">\\n              <a class=\\\"dropdown-item\\\" *ngFor=\\\"let action of moreActions.actions\\\" href=\\\"javascript:;\\\" (click)=\\\"onActionClick({id: row[moreActions.idFieldName], actionName: action.actionName})\\\">{{action.actionName}}</a>\\n              <!-- <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Another action</a>\\n                            <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Something else here</a>\\n                            <div role=\\\"separator\\\" class=\\\"dropdown-divider\\\"></div>\\n                            <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Separated link</a> -->\\n            </div>\\n          </div>\\n        </span>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <!-- <ngx-datatable-column name=\\\"Description\\\">\\n              <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n                <span>\\n                  {{value}}\\n                </span>\\n              </ng-template>\\n            </ngx-datatable-column>\\n            <ngx-datatable-column name=\\\"Actions\\\">\\n              <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n                <span>\\n                  {{value}}\\n                </span>\\n              </ng-template>\\n            </ngx-datatable-column> -->\\n  </ngx-datatable>\",\n                    styles: [\"\"]\n                },] },\n    ];\n    /** @nocollapse */\n    MlkDatatableComponent.ctorParameters = function () { return [\n        { type: StewardClientService }\n    ]; };\n    MlkDatatableComponent.propDecorators = {\n        columns: [{ type: Input }],\n        enableCheckbox: [{ type: Input }],\n        endpoint: [{ type: Input }],\n        moreActions: [{ type: Input }],\n        onActionsEvent: [{ type: Output }],\n        filterComponents: [{ type: Input }],\n        params: [{ type: Input }],\n        table: [{ type: ViewChild, args: [DatatableComponent,] }]\n    };\n    return MlkDatatableComponent;\n}());\n/**\n * Used to display more actions column and the end of the table\n */\nvar  /**\n * Used to display more actions column and the end of the table\n */\nMlkMoreActions = /** @class */ (function () {\n    function MlkMoreActions(actions, id, name) {\n        /**\n         * Action Column name e.g. More Actions\n         */\n        this.name = \"Actions\";\n        /**\n         * Field name id from the server response e.g userId\n         */\n        this.idFieldName = \"id\";\n        this.actions = actions;\n        this.name = name;\n        this.idFieldName = id;\n    }\n    return MlkMoreActions;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nvar TgrMaterialTableComponent = /** @class */ (function () {\n    function TgrMaterialTableComponent() {\n    }\n    /**\n     * @return {?}\n     */\n    TgrMaterialTableComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n    };\n    TgrMaterialTableComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'tgr-material-table',\n                    template: \"<div class=\\\"card card-outline-default\\\">\\n  <div class=\\\"card-body\\\">\\n  </div>\\n</div>\",\n                    styles: [\"\"]\n                },] },\n    ];\n    /** @nocollapse */\n    TgrMaterialTableComponent.ctorParameters = function () { return []; };\n    return TgrMaterialTableComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nvar StewardClientModule = /** @class */ (function () {\n    function StewardClientModule() {\n    }\n    /**\n     * @param {?} config\n     * @return {?}\n     */\n    StewardClientModule.forRoot = /**\n     * @param {?} config\n     * @return {?}\n     */\n    function (config) {\n        return {\n            ngModule: StewardClientModule,\n            providers: [{ provide: StewardConfig, useValue: config }]\n        };\n    };\n    StewardClientModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [\n                        FormsModule,\n                        ReactiveFormsModule,\n                        NgxDatatableModule,\n                        CommonModule,\n                        HttpClientModule\n                    ],\n                    declarations: [\n                        StewardClientComponent,\n                        MlkDatatableComponent,\n                        TgrMaterialTableComponent\n                    ],\n                    exports: [StewardClientComponent, MlkDatatableComponent]\n                },] },\n    ];\n    return StewardClientModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { StewardConfig, StewardClientService, StewardClientComponent, MlkDatatableComponent, MlkMoreActions, StewardClientModule, MlkDynamicControl, MlkInput, MlkTextarea, MlkSelect, MlkSelectOption, Page, Sort, ResponseWrapper, TgrMaterialTableComponent };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<h4>Other Tables</h4>\\r\\n<router-outlet></router-outlet>\\r\\n<hr />\\r\\n<tgr-material-table></tgr-material-table>\\r\\n<hr />\\r\\n<h4>NGX Datable</h4>\\r\\n<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <stw-mlk-datatable [endpoint]=\\\"'/role'\\\" [columns]=\\\"columns\\\" [moreActions]=\\\"moreActions\\\"></stw-mlk-datatable>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component } from '@angular/core';\r\nimport { StewardClientService, MlkDataTableColumn, MlkMoreActions } from 'steward-client'\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n  columns: Array<MlkDataTableColumn> = [\r\n    {columnName: \"Role Name\", fieldName: \"name\"}, \r\n    {columnName: \"Description\", fieldName: \"description\"},\r\n    {columnName: \"Date Created\", isDateColumn: true, fieldName: \"creationDate\"}\r\n  ];\r\n   moreActions: MlkMoreActions;\r\n\r\n   constructor(){\r\n    this.moreActions = new MlkMoreActions([\r\n      {actionName: \"View\"}, {actionName: \"Delete\"}\r\n    ], \"roleId\", \"More Actions\");\r\n\r\n   }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { StewardClientService, StewardClientModule } from 'steward-client';\r\nimport { MaterialTableComponent } from './material-table/material-table.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nexport const routes: Routes = [\r\n  {path: 'material-table', component: MaterialTableComponent},\r\n  {path: 'material-table', component: AppComponent},\r\n  { path: '',\r\n    redirectTo: '/material-table',\r\n    pathMatch: 'full'\r\n  },\r\n  { path: '**', component: MaterialTableComponent }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MaterialTableComponent,\r\n    \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    StewardClientModule.forRoot(\r\n      {base_url: \"http://localhost:8084\", access_token: null}\r\n    ),\r\n    RouterModule.forRoot(\r\n      routes,\r\n      { enableTracing: true } // <-- debugging purposes only\r\n    )\r\n  ],\r\n  providers: [StewardClientService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-material-table',\n  templateUrl: './material-table.component.html',\n  styleUrls: ['./material-table.component.css']\n})\nexport class MaterialTableComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}